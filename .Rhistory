ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
facet_grid(obs_species_id_method_name ~ Waterbody)
ggplot(data = filter(fil_d_inv, obscountyname == "Monroe"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
facet_grid(obs_species_id_method_name ~ Waterbody)
#philadelphia county
ggplot(data = filter(fil_d_inv, obscountyname == "Monroe"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ Waterbody)
ggplot(data = filter(fil_d_inv, obscountyname == "Montgomery"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ Waterbody)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ Waterbody)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ HUC4)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ data status name)
#philadelphia county
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ data_status _name)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ data_status_name)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
theme(title = center)+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
?theme
?title
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
theme(plot.title = element_text(hjust = 0.5))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
theme(plot.title = element_text(hjust = 0.3))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
theme(plot.title = element_text(hjust = 0.7))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Berks"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Allegheny"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Allegheny"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.9))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Allegheny"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.9))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Allegheny"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
#second graph with count
ggplot(data = filter(fil_d_inv, obscountyname == "Wayne"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Lehigh"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Lebanon"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Monroe"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")
ggplot(data = filter(fil_d_inv, obscountyname == "Monroe"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Monroe County",
x = "Species Common Name", y = "Proportion of Observations")
#Need to filter more species - filter by COUNTY
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
plot.title = element_text(hjust = 0.8)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County",
x = "Species Common Name", y = "Proportion of Observations")
#Monroe works
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
plot.title = element_text(hjust = 0.5)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County",
x = "Species Common Name", y = "Proportion of Observations")
#Monroe works
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
plot.title = element_text(hjust = 1)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County",
x = "Species Common Name", y = "Proportion of Observations")
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
plot.title = element_text(hjust = 1.3)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County",
x = "Species Common Name", y = "Proportion of Observations")
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName, fill = factor(..x..),
y = ..prop.., group = 1), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 9),
plot.title = element_text(hjust = 1.2)) +
coord_flip()+
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County",
x = "Species Common Name", y = "Proportion of Observations")
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_grid(obs_species_id_method_name ~ obsdatastatus)
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Monroe County by ID type and Data Status",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_wrap(~obs_species_id_method_name)
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County by ID type",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 0.8))+
coord_flip()+
facet_wrap(~obs_species_id_method_name)
ggplot(data = filter(fil_d_inv, obscountyname == "Philadelphia"))+
geom_bar(mapping = aes(x = stateCommonName,fill = stateCommonName), show.legend = FALSE) +
theme(axis.text.x = element_text(size = 6), title = element_text(size = 8),
axis.text.y = element_text(size = 6)) +
labs(title = "Proportion of Aquatic Invasive Species in Philadelphia County by ID type",
x = "Species Common Name", y = "Number of Observations")+
theme(plot.title = element_text(hjust = 1.1))+
coord_flip()+
facet_wrap(~obs_species_id_method_name)
library(tidyverse)
who5 <- who %>%
gather(code, value, new_sp_m014:newrel_f65, na.rm = TRUE) %>%
mutate(code = stringr::str_replace(code, "newrel", "new_rel")) %>%
separate(code, c("new", "var", "sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex", "age"), sep = 1)
#country
who5country <- who5 %>%
count(country, wt = value) %>%
mutate(nlog = log(n))
#There is nothing to facet by so I need a new strategy...cut off by row number
#Filter by row_number to make the plots more readable
who5ctFIL <- filter(who5country, between(row_number(), 1, 50))
who5ctFIL2 <- filter(who5country, between(row_number(), 51, 100))
who5ctFIL3 <- filter(who5country, between(row_number(), 101, 150))
who5ctFIL4 <- filter(who5country, between(row_number(), 151, 219))
#manually plot all of the 4 plots
who5ctFIL %>%
ggplot(aes(country, nlog)) +
geom_col(fill = rainbow(50)) +
coord_flip() +
theme(axis.text.y = element_text(size = 5))
who5ctFIL2 %>%
ggplot(aes(country, nlog)) +
geom_col(fill = rainbow(50)) +
coord_flip() +
theme(axis.text.y = element_text(size = 5))
who5ctFIL3 %>%
ggplot(aes(country, nlog)) +
geom_col(fill = rainbow(50)) +
coord_flip() +
theme(axis.text.y = element_text(size = 5))
who5ctFIL4 %>%
ggplot(aes(country, nlog)) +
geom_col(fill = rainbow(69)) + #has a few more observations
coord_flip() +
theme(axis.text.y = element_text(size = 4))
#I could section off another set of 19 instead of 69 but it seemed to be redundant.
#year
who5 %>%
count(year, wt = value) %>%
mutate(nlog = log(n)) %>%
ggplot(aes(year, nlog)) +
geom_col(fill = rainbow(34)) +
coord_flip()
#sex
who5 %>%
count(sex, wt = value) %>%
mutate(nlog = log(n)) %>%
ggplot(aes(sex, n)) +
geom_col(fill = c("red", "blue"))
?log
library(modelr)
library(tidyverse)
library(gapminder)
ggplot(by_country4, aes(estimate, country))+
geom_point()+
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high))+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
facet_grid(term~continent, scales = "free")+
coord_flip()
if(FALSE){
# first install these packages
install.packages("devtools")
install.packages("curl")
install.packages("reshape2")
install.packages("digest")
install.packages("gdata")
install.packages("readxl")
# now load devtools
require(devtools)
# install these packages (these are the packages that may give you an error that I described above)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
install_github("ropensci/testdat")
install_github("willpearse/natdb")
# Note if you still have a failure installing natdb, R will give you a warning of the package
# that you need to install, so install that package that R tells you to install and then again
# try to install natdb
# load the natdb package
# note that R will ask to make a directory where it will store the database that it builds. If you want
# the directory to be the default ans. Y and if not ans. n
}
library(natdb)
source('~/Desktop/TempleRcourse/Colaboration_assignment/qsgp_test_upstream/natdb_install.R', echo=TRUE)
if(FALSE){
# first install these packages
install.packages("devtools")
install.packages("curl")
install.packages("reshape2")
install.packages("digest")
install.packages("gdata")
install.packages("readxl")
# now load devtools
require(devtools)
# install these packages (these are the packages that may give you an error that I described above)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
install_github("ropensci/testdat")
install_github("willpearse/natdb")
# Note if you still have a failure installing natdb, R will give you a warning of the package
# that you need to install, so install that package that R tells you to install and then again
# try to install natdb
# load the natdb package
# note that R will ask to make a directory where it will store the database that it builds. If you want
# the directory to be the default ans. Y and if not ans. n
}
library(natdb)
library(natdb)
install.packages("natdb")
library(natdb)
if(FALSE){
# first install these packages
install.packages("devtools")
install.packages("curl")
install.packages("reshape2")
install.packages("digest")
install.packages("gdata")
install.packages("readxl")
# now load devtools
require(devtools)
# install these packages (these are the packages that may give you an error that I described above)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
install_github("ropensci/testdat")
install_github("willpearse/natdb")
# Note if you still have a failure installing natdb, R will give you a warning of the package
# that you need to install, so install that package that R tells you to install and then again
# try to install natdb
# load the natdb package
# note that R will ask to make a directory where it will store the database that it builds. If you want
# the directory to be the default ans. Y and if not ans. n
}
library(natdb)
install.packages("natdb")
version
getwd()
setwd("/Users/christophercarnivale/Desktop/TempleRcourse/Colaboration_assignment/Quantitative_R_Course")
melt?
?melt
library(natdb)
install.packages("natdb")
install_github("willpearse/natdb")
require(devtools)
if(FALSE){
# first install these packages
install.packages("devtools")
install.packages("curl")
install.packages("reshape2")
install.packages("digest")
install.packages("gdata")
install.packages("readxl")
# now load devtools
require(devtools)
# install these packages (these are the packages that may give you an error that I described above)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
install_github("ropensci/testdat")
install_github("willpearse/natdb")
# Note if you still have a failure installing natdb, R will give you a warning of the package
# that you need to install, so install that package that R tells you to install and then again
# try to install natdb
# load the natdb package
# note that R will ask to make a directory where it will store the database that it builds. If you want
# the directory to be the default ans. Y and if not ans. n
}
a
a
install.packages("devtools")
install.packages("curl")
install.packages("reshape2")
install.packages("digest")
install.packages("gdata")
install.packages("readxl")
require(devtools)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
update_packages("xml2")
install_github("willpearse/suppdata")
update_packages()
install_github("willpearse/suppdata")
update.packages(xml2)
update_packages("xml2")
install.packages("xml2")
install.packages("xml2")
sessionInfo()
install.packages("devtools")
install.packages("curl")
a
install_github("willpearse/fulltext")
require(devtools)
install_github("willpearse/fulltext")
install_github("willpearse/suppdata")
install_github("ropensci/testdat")
install_github("willpearse/natdb")
library(natdb)
library(tidyverse)
library(suppdata)
library(fulltext)
